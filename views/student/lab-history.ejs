<%- include('../partials/_header') %>
<body class="main-layout inner_posituong">
  <%- include('../partials/_navbar') %>
  
  <div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center">
      <h2>Laboratuvar Kullanım Geçmişi</h2>
      <div class="btn-group">
        <button class="btn btn-outline-primary" onclick="filterHistory('all')">Tümü</button>
        <button class="btn btn-outline-primary" onclick="filterHistory('thisMonth')">Bu Ay</button>
        <button class="btn btn-outline-primary" onclick="filterHistory('thisWeek')">Bu Hafta</button>
      </div>
    </div>

    <!-- İstatistik Kartları -->
    <div class="row mt-4">
      <div class="col-md-3">
        <div class="card bg-primary text-white">
          <div class="card-body text-center">
            <i class="fas fa-clock fa-3x mb-3"></i>
            <h5 class="card-title">Toplam Süre</h5>
            <p class="h4" id="totalDuration">
              <%= formatDuration(totalDuration) %>
            </p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-success text-white">
          <div class="card-body text-center">
            <i class="fas fa-desktop fa-3x mb-3"></i>
            <h5 class="card-title">Toplam Oturum</h5>
            <p class="h4" id="totalSessions"><%= history.length %></p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-info text-white">
          <div class="card-body text-center">
            <i class="fas fa-calculator fa-3x mb-3"></i>
            <h5 class="card-title">Ortalama Süre</h5>
            <p class="h4" id="avgDuration">
              <%= formatDuration(avgDuration) %>
            </p>
          </div>
        </div>
      </div>
      <div class="col-md-3">
        <div class="card bg-warning text-white">
          <div class="card-body text-center">
            <i class="fas fa-calendar-check fa-3x mb-3"></i>
            <h5 class="card-title">Son Kullanım</h5>
            <p class="h4">
              <% if (history.length > 0) { %>
                <%= formatDate(history[history.length - 1].startTime) %>
              <% } else { %>
                -
              <% } %>
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Kullanım Geçmişi Tablosu -->
    <div class="card mt-4">
      <div class="card-header bg-primary text-white">
        <h5 class="card-title mb-0">
          <i class="fas fa-history"></i> Kullanım Geçmişi
        </h5>
      </div>
      <div class="card-body">
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead>
              <tr>
                <th><i class="fas fa-calendar-alt"></i> Tarih</th>
                <th><i class="fas fa-clock"></i> Başlangıç</th>
                <th><i class="fas fa-clock"></i> Bitiş</th>
                <th><i class="fas fa-building"></i> Laboratuvar</th>
                <th><i class="fas fa-desktop"></i> Bilgisayar</th>
                <th><i class="fas fa-hourglass-half"></i> Süre</th>
                <th><i class="fas fa-user-shield"></i> Operatör</th>
                <th><i class="fas fa-info-circle"></i> Durum</th>
              </tr>
            </thead>
            <tbody>
              <% history.forEach(session => { %>
                <tr>
                  <td><%= formatDate(session.startTime) %></td>
                  <td><%= formatTime(session.startTime) %></td>
                  <td><%= session.endTime ? formatDate(session.endTime) : 'Devam Ediyor' %></td>
                  <td><%= session.computer?.lab?.name || 'Bilinmiyor' %></td>
                  <td><%= session.computer?.name || 'Bilinmiyor' %></td>
                  <td>
                    <%= session.endTime ? formatDuration(new Date(session.endTime) - new Date(session.startTime)) : 'Devam Ediyor' %>
                  </td>
                  <td>
                    <% if (session.operator) { %>
                      <span class="text-muted">
                        <i class="fas fa-user"></i>
                        <%= session.operator.name %> <%= session.operator.lastname %>
                      </span>
                    <% } else { %>
                      <span class="text-muted">Bilinmiyor</span>
                    <% } %>
                  </td>
                  <td>
                    <% if (!session.endTime) { %>
                      <span class="badge bg-gradient">
                        <i class="fas fa-spinner fa-spin"></i> 
                        Aktif Oturum
                      </span>
                    <% } else { %>
                      <span class="badge bg-success">
                        <i class="fas fa-check-circle"></i> 
                        Tamamlandı
                      </span>
                    <% } %>
                  </td>
                </tr>
              <% }) %>
              <% if (history.length === 0) { %>
                <tr>
                  <td colspan="5" class="text-center text-muted">
                    Henüz laboratuvar geçmişi bulunmuyor.
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <%- include('../partials/_footer') %>

  <script>
    // Sayfa yüklendiğinde başlangıç değerlerini sakla
    let initialStats = {
      totalDuration: document.getElementById('totalDuration').textContent,
      totalSessions: document.getElementById('totalSessions').textContent,
      avgDuration: document.getElementById('avgDuration').textContent
    };

    function filterHistory(period) {
      const rows = document.querySelectorAll('.history-row');
      const now = new Date();
      const oneWeekAgo = new Date(now - 7 * 24 * 60 * 60 * 1000);
      const oneMonthAgo = new Date(now.getFullYear(), now.getMonth(), 1);

      if (period === 'all') {
        // Tümü seçildiğinde başlangıç değerlerine dön
        rows.forEach(row => row.style.display = '');
        document.getElementById('totalDuration').textContent = initialStats.totalDuration;
        document.getElementById('totalSessions').textContent = initialStats.totalSessions;
        document.getElementById('avgDuration').textContent = initialStats.avgDuration;
        return;
      }

      let totalDuration = 0;
      let visibleRows = 0;

      rows.forEach(row => {
        const date = new Date(row.dataset.date);
        let show = true;

        if (period === 'thisWeek') {
          show = date >= oneWeekAgo;
        } else if (period === 'thisMonth') {
          show = date >= oneMonthAgo;
        }

        row.style.display = show ? '' : 'none';

        if (show) {
          visibleRows++;
          const durationCell = row.querySelector('td:nth-child(6)');
          const durationText = durationCell.textContent.trim();
          
          if (!durationText.includes('Devam Ediyor')) {
            try {
              const [hours, , minutes] = durationText.split(' '); // "3 saat 45 dakika" formatını parçala
              const hoursNum = parseInt(hours) || 0;
              const minutesNum = parseInt(minutes) || 0;
              totalDuration += (hoursNum * 60 + minutesNum) * 60 * 1000;
            } catch (error) {
              console.error('Süre ayrıştırma hatası:', error);
            }
          }
        }
      });

      // İstatistikleri güncelle
      const avgDuration = visibleRows > 0 ? totalDuration / visibleRows : 0;

      document.getElementById('totalDuration').textContent = formatDuration(totalDuration);
      document.getElementById('totalSessions').textContent = visibleRows;
      document.getElementById('avgDuration').textContent = formatDuration(avgDuration);
    }

    function formatDuration(milliseconds) {
      if (!milliseconds) return '0 dakika';
      
      const hours = Math.floor(milliseconds / (1000 * 60 * 60));
      const minutes = Math.floor((milliseconds % (1000 * 60 * 60)) / (1000 * 60));
      
      if (hours === 0) {
        return `${minutes} dakika`;
      }
      return `${hours} saat ${minutes} dakika`;
    }

    // Tarih formatlamak için yardımcı fonksiyon
    function formatDate(date) {
      const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      };
      return new Date(date).toLocaleDateString('tr-TR', options);
    }
  </script>

  <!-- Stil eklemeleri -->
  <style>
    .table th {
      font-weight: 600;
      color: #555;
    }

    .table th i {
      margin-right: 5px;
      color: #666;
    }

    .table td {
      vertical-align: middle;
    }

    .badge {
      padding: 8px 12px;
      font-size: 0.85rem;
      font-weight: 500;
      letter-spacing: 0.3px;
      border-radius: 20px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: all 0.3s ease;
    }

    .badge:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .badge i {
      margin-right: 5px;
    }

    .bg-gradient {
      background-size: 200% auto;
      animation: gradient 2s ease infinite;
    }

    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .text-muted i {
      margin-right: 5px;
    }

    .table-striped tbody tr:nth-of-type(odd) {
      background-color: rgba(0,0,0,.02);
    }

    .table-hover tbody tr:hover {
      background-color: rgba(0,0,0,.04);
    }
  </style>
</body> 